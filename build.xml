<project name="ANR-Decklist" default="dist" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
  <description>
    simple example build file
  </description>
  
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist" location="dist"/>
  <property name="lib.dir"     value="lib"/>

  <path id="classpath">
    <fileset dir="${lib.dir}" includes="**/*.jar"/>
  </path>
  
  <target name="bootstrap" description="Used to install the ivy task jar">
    <mkdir dir="${user.home}/.ant/lib"/>
    <get dest="${user.home}/.ant/lib/ivy.jar" src="http://search.maven.org/remotecontent?filepath=org/apache/ivy/ivy/2.5.0/ivy-2.5.0.jar"/>
  </target>
  
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>


  <target name="retrieve-dependencies" depends="init"
	  description="Retrieve dependencies with Apache IVY">
    <ivy:retrieve type="jar" />
  </target>

  <!-- external libraries classpath, we don't need sources and javadoc -->
  <path id="classpath">
    <fileset dir="${basedir}/">
      <include name="${lib.dir}/*.jar" />
      <exclude name="${lib.dir}/*sources.jar"/>
      <exclude name="${lib.dir}/*javadoc.jar"/>
    </fileset>
  </path>

  <target name="compile" depends="retrieve-dependencies"
	  description="compile the source">
    <!-- Compile the Java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" classpathref="classpath"/>
  </target>

  <!-- constructs the external libraries classpath name -->
  <pathconvert property="classpath.name" pathsep=" ">
    <path refid="classpath" />
    <mapper>
      <chainedmapper>
	<flattenmapper />
	<globmapper from="*.jar" to="lib/*.jar" />
      </chainedmapper>
    </mapper>
  </pathconvert>
	
  <target name="copy-dependencies">
    <copy todir="${dist}/lib">
      <fileset dir="${lib.dir}" includes="**/*.jar" excludes="**/*sources.jar, **/*javadoc.jar" />
    </copy>
  </target>

  <target name="dist" depends="compile, copy-dependencies"
          description="generate the distribution">
    <echo message="classpath.name : ${classpath.name} " />
    
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>
    <mkdir dir="${dist}/lib"/>
    
    
    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/ANR-DeckList.jar" basedir="${build}">
      <manifest>
	<attribute name="Main-Class" value="builder.Decklists" />
	<attribute name="Class-Path" value="${classpath.name}" />
      </manifest>
    </jar>
    
    <!-- Copy a set of config files to the dist directory -->
    <copy todir="${dist}/conf">
      <fileset dir="${src}">
	<include name="**/*.conf"/>
	<exclude name="**/*.java"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean" description="clean up">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>
